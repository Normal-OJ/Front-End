stages:
  - build
  - docker
  - deploy

image: node:14.16.1-buster

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH'

build-site:
  stage: build
  tags:
    - shared
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run build
  artifacts:
    paths:
      - dist
    expire_in: 1 week

build-image-and-upload:
  stage: docker
  tags:
    - shared
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

deploy-production:
  stage: deploy
  tags:
    - deployment
    - production
  variables:
    ANSIBLE_PYTHON_INTERPRETER: /usr/bin/python3
  script:
    - ansible-galaxy collection install community.docker
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - ansible-playbook --connection=local --inventory=127.0.0.1, playbook.prod.yml
    - docker logout $CI_REGISTRY
  environment:
    name: prod
    url: https://noj.tw
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - when: manual
